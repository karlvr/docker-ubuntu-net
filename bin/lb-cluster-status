#!/bin/bash

$(dirname $0)/lb-ssh-add
if [ $? != 0 ]; then
        exit 1
fi

server_status() {
	echo "################################################################################"
	echo $SERVER
	echo "################################################################################"
	ssh $SERVER 'uptime ; free -m'
	ssh $SERVER "if [ -d /etc/postgresql ]; then echo ; su - postgres -c \"psql -c \\\"SELECT datname,usename,pid,client_addr,waiting,query_start,to_char((current_timestamp-query_start)::interval, 'DD HH24:MI:SS') as duration,query FROM pg_stat_activity WHERE state <> 'idle' AND usename = 'letterboxd' ORDER BY query_start;\\\"\" ; fi"
	ssh $SERVER "if [ -d /etc/postgresql ]; then echo ; su - postgres -c \"psql -c \\\"select bl.pid as blocked_pid, a.usename as blocked_user, ka.query as blocking_statement, to_char((now() - ka.query_start)::interval, 'DD HH24:MI:SS') as blocking_duration, kl.pid as blocking_pid, ka.usename as blocking_user, a.query as blocked_statement, to_char((now() - a.query_start)::interval, 'DD HH24:MI:SS') as blocked_duration from pg_catalog.pg_locks bl join pg_catalog.pg_stat_activity a on bl.pid = a.pid join pg_catalog.pg_locks kl join pg_catalog.pg_stat_activity ka on kl.pid = ka.pid on bl.transactionid = kl.transactionid and bl.pid != kl.pid where not bl.granted;\\\"\" ; fi"
	echo
}

SERVERS=$*
if [ "x$SERVERS" == "x" ]; then
	SERVERS="app1 app2 db1 db2"
fi

for SERVER in $SERVERS
do
	server_status
done
