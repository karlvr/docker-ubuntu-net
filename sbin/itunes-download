#!/bin/bash
#

DOWNLOAD_DIR=/tmp/letterboxd-itunes/download
EXTRACT_DIR=/tmp/letterboxd-itunes/extract

mkdir -p "$DOWNLOAD_DIR"
mkdir -p "$EXTRACT_DIR"

USER=epfuser19e9c30
PASSWORD=375891146ac1d9786d91296e81b9be53
URL=https://feeds.itunes.apple.com/feeds/epf/v3/full/current/

wget -r -l 1 --no-host-directories --no-directories --no-parent --timestamping \
	--accept "itunes*.tbz,pricing*.tbz" -P "$DOWNLOAD_DIR" \
	--user "$USER" --password "$PASSWORD" $URL

# Find the latest files
ITUNES_TBZ=$(ls -r "$DOWNLOAD_DIR"/itunes*.tbz | head -n 1)
PRICING_TBZ=$(ls -r "$DOWNLOAD_DIR"/pricing*.tbz | head -n 1)

# Delete old files
for i in $(ls -r "$DOWNLOAD_DIR"/itunes*.tbz | tail -n +2); do
	rm -f "$i"
done
for i in $(ls -r "$DOWNLOAD_DIR"/pricing*.tbz | tail -n +2); do
	rm -f "$i"
done

# Check file sizes
ITUNES_TBZ_SIZE=$(du -k "$ITUNES_TBZ" | cut -f 1)
PRICING_TBZ_SIZE=$(du -k "$PRICING_TBZ" | cut -f 1)

if [ $ITUNES_TBZ_SIZE -lt 5242880 ]; then
	echo "*** $ITUNES_TBZ is too small at $ITUNES_TBZ_SIZE KB"
	exit 1
fi
if [ $PRICING_TBZ_SIZE -lt 10485760 ]; then
	echo "*** $PRICING_TBZ is too small at $PRICING_TBZ_SIZE KB"
	exit 1
fi


ITUNES_FOLDER=${ITUNES_TBZ##*/}
ITUNES_FOLDER=${ITUNES_FOLDER%.*}
PRICING_FOLDER=${PRICING_TBZ##*/}
PRICING_FOLDER=${PRICING_FOLDER%.*}

echo "Extracting $ITUNES_TBZ to $EXTRACT_DIR"
tar xjf $ITUNES_TBZ -C "$EXTRACT_DIR" --strip-components=1 --no-same-owner "$ITUNES_FOLDER/video" "$ITUNES_FOLDER/storefront"

if [ $? != 0 ]; then
	echo "*** Failed to extract from $ITUNES_TBZ"
	exit 1
fi

echo "Extracting $PRICING_TBZ to $EXTRACT_DIR"
tar xjf $PRICING_TBZ -C "$EXTRACT_DIR" --strip-components=1 --no-same-owner "$PRICING_FOLDER/video_price"

if [ $? != 0 ]; then
	echo "*** Failed to extract from $PRICING_TBZ"
	exit 1
fi
