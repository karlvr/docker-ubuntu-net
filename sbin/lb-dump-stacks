#!/bin/bash
#
# Dump JVM stacks repeatedly to a folder.

SLEEP=1
OUTPUT=""

while getopts ":s:o:" opt; do
  case $opt in
    s)
      SLEEP="$OPTARG"
      ;;
    o)
	  OUTPUT="$OPTARG"
	  ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

shift $((OPTIND-1))

usage() {
	echo "usage: $0 [-o <output path>] [-s <sleep seconds>] <pid>"
}

PID=$1
if [ "x$PID" == "x" ]; then
	usage
	exit 1
fi

if [ "x$OUTPUT" == "x" ]; then
	OUTPUT="./stacks-$(date +%s)-$(hostname -s)"
fi

if [ ! -d "$OUTPUT" ]; then
	mkdir -p "$OUTPUT"
fi
if [ ! -d "$OUTPUT" ]; then
	echo "Invalid output path: $OUTPUT"
	exit 1
fi

# Test whether "date" supports nanos
if [ "x$(date +%N)" == "xN" ]; then
	DATE_PATTERN="%s"
	DIVISOR=1
else
	DATE_PATTERN="%s%N"
	DIVISOR=1000000
fi

while true
do
	OUTPUT_FILE="$OUTPUT/$PID-$(($(date +$DATE_PATTERN)/$DIVISOR)).txt"
	jstack "$PID" > "$OUTPUT_FILE"
	echo -n "."
	sleep "$SLEEP"
done
